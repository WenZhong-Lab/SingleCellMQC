---
title: "SingleCellMQC"
format: html
editor: visual
---

```{r setup, include=FALSE}
## Global options
knitr::opts_chunk$set(echo = TRUE)
```

```{r function, echo=FALSE}
# params:
#   data: out_list
#   cell_dir: plot_dir
subchunkify <- function(g, fig_height=7, fig_width=5, seed=floor(runif(1) * 10000)) {
  g_deparsed <- paste0(deparse(
    function() {g}
  ), collapse = '')

  sub_chunk <- paste0("`","``{r sub_chunk_", seed, ", fig.height=",
   fig_height, ", fig.width=", fig_width, ", echo=FALSE, warning=FALSE, message=FALSE}",
  "\n(", 
    g_deparsed
    , ")()",
  "\n`","``
  ")

  cat(knitr::knit(text = knitr::knit_expand(text = sub_chunk), quiet = TRUE))
}

bar_style <- function(width = 1, fill = "#e6e6e6", height = "75%",
                      align = c("left", "right"), color = NULL) {
  align <- match.arg(align)
  if (align == "left") {
    position <- paste0(width * 100, "%")
    image <- sprintf("linear-gradient(90deg, %1$s %2$s, transparent %2$s)", fill, position)
  } else {
    position <- paste0(100 - width * 100, "%")
    image <- sprintf("linear-gradient(90deg, transparent %1$s, %2$s %1$s)", position, fill)
  }
  list(
    backgroundImage = image,
    backgroundSize = paste("100%", height),
    backgroundRepeat = "no-repeat",
    backgroundPosition = "center",
    color = color
  )
}

btn <- function(xLoc, m, nms, xOry, data) { # x btn position, method, names, x or y
  list(type = "list", x = xLoc, xanchor = "left", y = 1.2, 
       buttons = lapply(
         nms, function(k) {           # iterate over names
           list(
             method = m, label = k,
             args = if(xOry == "x"){
               list( # a list for each trace (each legend entry)
                 list(x = list(data[, k] )),  # 3 lists, 3 traces
                 list(xaxis = list(title = k)))
             }else{
               list(
                 list(y = list(data[, k] )),  # 3 lists, 3 traces
                 list(yaxis = list(title = k)))
             }
           )}
       )
  )}

warning_alert_orange <- function(text) {
  cat(sprintf('<div class="alert alert-warning">
  <h5 class="alert-heading" style="font-size: 20px;" aria-hidden="true">Warning!</h5>
  %s
</div>', text))
}
warning_alert_red <- function(text) {
  cat(sprintf('<div class="alert alert-dismissible alert-danger">
  <h5 class="alert-heading" style="font-size: 20px;" aria-hidden="true">Warning!</h5>
  %s
</div>', text))
}

note_grey <- function(text) {
  cat(sprintf('<div class="alert alert-dismissible alert-light">
  %s
</div>', text))
}



data <- params$data
cell_dir <- params$cell_dir

```





# Authors {.unnumbered}

**[WenZhong Lab GitHub](https://github.com/WenZhong-Lab):**

-  **Daihan Ji**

-  **Mei Han**

-  **Shuting Lu**

-  **Jiaying Zeng** 

-  **Wen Zhong** 
